
@page "/account-settings"
@using InternetPoint.Models
@inject UserStateService UserStateService
@inject UserService UserService
@inject NavigationManager Navigation
<PageTitle>Настройки учетной записи</PageTitle>
<div class="dashboard-layout">
    <nav class="dashboard-nav">
        <div>
            <a><NavLink href="/user-profile">Личный кабинет</NavLink></a>
            <a><NavLink href="/account-settings">Настройки</NavLink></a>
            <a><NavLink href="/manage">Управление тарифами</NavLink></a>
            <a><button @onclick="SignOut">Выйти</button></a>
            <span></span>
        </div>
    </nav>
</div>

<h3>Настройки учетной записи</h3>

@if (user == null)
{
    <p><em>Загрузка...</em></p>
}
else if (!UserStateService.IsAuthenticated)
{
    <p><em>Вы не аутентифицированы. Пожалуйста, войдите в систему.</em></p>
}
else
{
    <EditForm Model="user" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="username">Имя пользователя:</label>
            <InputText id="username" class="form-control" @bind-Value="user.Name" />
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="user.Email" />
        </div>

        <div class="form-group">
            <label for="firstname">Имя:</label>
            <InputText id="firstname" class="form-control" @bind-Value="user.firstname" />
        </div>

        <div class="form-group">
            <label for="lastname">Фамилия:</label>
            <InputText id="lastname" class="form-control" @bind-Value="user.lastname" />
        </div>

        <div class="form-group">
            <label for="phone">Телефон:</label>
            <InputText id="phone" class="form-control" @bind-Value="user.phone" />
        </div>

        <div class="form-group">
            <label for="address">Адрес:</label>
            <InputText id="address" class="form-control" @bind-Value="user.address" />
        </div>

        <button type="submit" class="btn btn-primary">Сохранить изменения</button>
    </EditForm>
}

<style>
    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .btn {
        background-color: #007bff;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-primary {
        background-color: #007bff;
    }
</style>

@code {
    private User user;

    protected override async Task OnInitializedAsync()
    {
        int userId = UserStateService.GetUserId();

        if (userId == 0)
        {
            
        }
        else
        {
            user = await UserService.GetUserByIdAsync(userId);
        }
    }

    private async Task HandleValidSubmit()
    {
        await UserService.UpdateUserAsync(user);
       
    }
    private async Task SignOut()
    {
        await UserStateService.SignOutAsync();
        Navigation.NavigateTo("/");
    }
}
<style>
    .dashboard-nav {
        display: flex;
        background-color: #f9f9f9;
        padding: 20px;
        border-bottom: 1px solid #ccc;
        text-align: center; /* Центрируем элементы */
        font-size: 20px; /* Увеличиваем размер шрифта */
        position: fixed; /* Фиксируем позиционирование */
        width: 100%; /* Занимаем всю ширину */
        top: 0; /* Помещаем вверх страницы */
        left: 255px; /* Начинаем от левого края */
        justify-content: center;
        z-index: 9999; 
    }

    
    .dashboard-nav div {
        position: relative;
        list-style-type: none;
        padding: 0;
        margin: 0;
        width: 1000px;
        display: flex;
        justify-content: center; 
        align-items: center;
    }


    .dashboard-nav a {
        position: relative;
        display: inline-block;
        font-weight: 500;
        padding: 0 30px;
        color: #007bff;
        z-index: 1;
        transition: .5s;
    }

    .dashboard-nav span {
        position: absolute;
        display: flex;
        padding: 0 30px;
        top: 0px;
        left: 280px;
        width: 250px;
        height: 100%;
        background: rgb(73, 33, 97);
        border-radius: 8px;
        transition: .5s;
    }

    .dashboard-nav a:nth-child(1):hover ~ span {
        left: 30px;
    }

    .dashboard-nav a:nth-child(2):hover ~ span {
        left: 280px;
    }

    .dashboard-nav a:nth-child(3):hover ~ span {
        left: 542px;
        width: 280px;
    }

    .dashboard-nav a:nth-child(4):hover ~ span {
        left: 865px;
        width: 100px;
    }

    .dashboard-nav button {
        background: none;
        border: none;
        color: #007bff;
        cursor: pointer;
        text-decoration: none;
        font-size: 20px;
        font-weight: 500;
        transition: .5s;
    }

        .dashboard-nav button:hover {
            text-decoration: underline;
            color: #fff;
        }

    .dashboard-nav a:hover {
        color: #fff;
    }

    body {
        margin: 0;
        padding: 0;
        height: 100%;
        background: url('/images/фон2.jpg') no-repeat center center fixed; /* Добавляем фоновое изображение */
        background-size: cover;
    }
</style>
